{"version":3,"sources":["components/bakery_map/bakery_map.module.css","components/header/header.module.css","components/bakery_list/bakery_list.jsx","components/bakery_map/bakery_map.jsx","components/footer/footer.jsx","components/header/header.jsx","components/home/home.jsx","routes.js","app.jsx","index.js","service/places.js"],"names":["module","exports","BakeryList","shops_details","handlePhotos","console","log","BakeryMap","places","latNLng","useGoogleMaps","process","center","zoom","ref","map","google","className","styles","Footer","props","Header","header","form","search","search_form","type","placeholder","btn","img","src","alt","Home","useState","lat","lng","setLatNLng","nowLocation","setNowLocation","shops","setShops","setShopsDetails","shops_id","setShopsId","setPhotos","photoRef","getPhotos","then","prev","useEffect","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","forEach","shop_id","getDetail","data","reviews","sort","a","b","time","detail","push","id","place_id","getStore","results","ids","shop","Object","keys","key","AppRouter","path","App","this","getRequestOptions","method","redirect","axios","response","placeId","result","photorefenrence","config","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b586fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"bakery_map_map__2XBRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerDarkTransparent\":\"rgba(0,0,0,0.15)\",\"makerDarkGreen\":\"#014001\",\"header\":\"header_header__v9FKw\",\"form\":\"header_form__CKDVN\",\"search\":\"header_search__130F1\",\"search_form\":\"header_search_form__1B5hE\",\"btn\":\"header_btn__3Hd1x\",\"img\":\"header_img__2KRuG\"};","import React, {useEffect} from \"react\";\n\nconst BakeryList = ({shops_details, handlePhotos}) => {\n  console.log(shops_details);\n  // useEffect(() => {\n  //   if (shops) {\n  //     console.log(\"handlePhotos\");\n  //     shops.forEach(shop => handlePhotos(shop.data.photos[0].photo_reference));\n  //   }\n  // }, [shops]);\n  // const {rating, reviews, name, formatted_address} = shops_details;\n  return (\n    <li>\n      {/* <div>\n        <p>\n          <img src='https://maps.google.com/maps/contrib/105939868585281924493' />\n        </p>\n        <p>\n          <span>{rating}</span>\n          <span>({reviews.length})</span>\n        </p>\n      </div>\n      <h3>{name}</h3>\n      <p>{formatted_address}</p> */}\n    </li>\n  );\n};\n\nexport default BakeryList;\n","import BakeryList from \"components/bakery_list/bakery_list\";\nimport React from \"react\";\nimport styles from \"./bakery_map.module.css\";\nimport {useGoogleMaps} from \"react-hook-google-maps\";\n\n\nconst BakeryMap = ({places, latNLng}) => {\n  const {ref, map, google} = useGoogleMaps(process.env.REACT_APP_API_KEY, {\n    center: latNLng,\n    zoom: 15,\n  });\n\n\n  return (\n    <>\n      <div className={styles.map} ref={ref}></div>\n      <BakeryList />\n    </>\n  );\n};\n\nexport default BakeryMap;\n","import React from 'react';\n\nconst Footer = (props) => (\n        <footer>You can find brandnew bakery in your city</footer>    \n    );\n\nexport default Footer;","import React from \"react\";\nimport styles from \"./header.module.css\";\n\nconst Header = props => (\n  <header className={styles.header}>\n    <h1>Bakery Map</h1>\n    <form className={styles.form}>\n      <input\n        className={`${styles.search} ${styles.search_form}`}\n        type='text'\n        placeholder='Find a new bakery!'\n      />\n      <button className={`${styles.search} ${styles.btn}`}>\n        <img className={styles.img} src='images/search.png' alt='search icon' />\n      </button>\n    </form>\n  </header>\n);\n\nexport default Header;\n","import BakeryMap from \"../bakery_map/bakery_map\";\nimport React, {useState, useEffect, useCallback} from \"react\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport BakeryList from \"components/bakery_list/bakery_list\";\n\nconst Home = ({places}) => {\n  console.log(\"render home\");\n  const [latNLng, setLatNLng] = useState({\n    lat: 0,\n    lng: 0,\n  });\n  const [nowLocation, setNowLocation] = useState(false);\n  const [shops, setShops] = useState([]);\n  const [shops_details, setShopsDetails] = useState([]);\n  const [shops_id, setShopsId] = useState([]);\n  const [photos, setPhotos] = useState([]);\n\n  const handlePhotos = photoRef => {\n    places.getPhotos(photoRef).then(src => setPhotos(prev => [src]));\n  };\n\n  //현재 위치 받아와서 state에 저장\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(location => {\n      setLatNLng({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n      setNowLocation(true);\n    });\n  }, [nowLocation]);\n\n\n  useEffect(() => {\n    const STANDARD = 1577804400;\n    shops_id.forEach(shop_id => {\n      places.getDetail(shop_id).then(data => {\n        let {reviews} = data;\n        if (reviews) {\n          reviews = reviews.sort((a, b) => a.time - b.time);\n          if (reviews[0].time > STANDARD) {\n            setShopsDetails(detail => {\n              // const updated = [...shop];\n              // updated.push({id: data.place_id, data});\n              // return updated;\n              detail && detail.push({id: data.place_id, data});\n              return detail;\n            });\n          }\n        }\n      });\n    });\n  }, [places, shops_id]);\n\n  //Places에 parameter로 현재 위치 넣어주기\n  useEffect(() => {\n    if (nowLocation) {\n      places\n        .getStore(latNLng.lat, latNLng.lng)\n        .then(data => setShops(data.results));\n    }\n  }, [latNLng]);\n\n  //Place의 id state에 넣기\n  useEffect(() => {\n    const ids = shops.map(shop => shop.place_id);\n    setShopsId(ids);\n  }, [shops]);\n\n  return (\n    <>\n      <Header />\n      <section>\n        <BakeryMap latNLng={latNLng} />\n      </section>\n      <section>\n        <ul>\n          {shops_details &&\n            Object.keys(shops_details).map(key => {\n              return (\n                <BakeryList\n                  key={key}\n                  shops_details={shops_details[key].data}\n                  handlePhotos={handlePhotos}\n                />\n              );\n            })}\n        </ul>\n      </section>\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./components/home/home\";\n\nconst AppRouter = ({places}) => (\n  <Router>\n    <Switch>\n      <Route path='/'>\n        <Home places={places}/>\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default AppRouter;\n","import {useState, useCallback, useEffect} from \"react\";\n\nimport \"./app.css\";\nimport AppRouter from \"./routes\";\n\nfunction App({places}) {\n \n  // const [shops, setShops] = useState([]);\n  // const [shops_details, setShopsDetails] = useState([]);\n  // const [shops_id, setShopsId] = useState([]);\n  // const [latNLng, setLatNLng] = useState({\n  //   lat: 0,\n  //   lng: 0,\n  // });\n  // const [nowLocation, setNowLocation] = useState(false);\n  // const [photos, setPhotos] = useState([]);\n\n  // const handlePhotos = photoRef => {\n  //   places.getPhotos(photoRef).then(src => setPhotos(prev => [...prev, src]));\n  // };\n\n  // //현재 위치 받아와서 state에 저장\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(location => {\n  //     setLatNLng({\n  //       lat: location.coords.latitude,\n  //       lng: location.coords.longitude,\n  //     });\n  //     setNowLocation(true);\n  //   });\n  // }, [nowLocation]);\n\n  // //Places에 parameter로 현재 위치 넣어주기\n  // useEffect(() => {\n  //   if (nowLocation) {\n  //     places\n  //       .getStore(latNLng.lat, latNLng.lng)\n  //       .then(data => setShops(data.results));\n  //   }\n  // }, [latNLng]);\n\n  // useEffect(() => {\n  //   //Place의 id state에 넣기\n  //   const ids = shops.map(shop => shop.place_id);\n  //   setShopsId(ids);\n  // }, [shops]);\n\n  // useEffect(() => {\n  //   const STANDARD = 1577804400;\n  //   shops_id.forEach(shop_id => {\n  //     places.getDetail(shop_id).then(data => {\n  //       let {reviews} = data;\n  //       if (reviews) {\n  //         reviews = reviews.sort((a, b) => a.time - b.time);\n  //         if (reviews[0].time > STANDARD) {\n  //           setShopsDetails(detail => {\n  //             // const updated = [...shop];\n  //             // updated.push({id: data.place_id, data});\n  //             // return updated;\n  //             detail && detail.push({id: data.place_id, data});\n  //             return detail;\n  //           });\n  //         }\n  //       }\n  //     });\n  //   });\n  // }, [places, shops_id]);\n\n  return (\n    <AppRouter\n      places={places}\n    />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\n\nimport Places from \"./service/places\";\n\n// import GoogleMap from \"./service/googleMap\";\n// const googleMap = new GoogleMap(process.env.REACT_APP_API_KEY);\n\n// let lat, lng;\n// navigator.geolocation.getCurrentPosition(location => {\n//   lat = location.coords.latitude;\n//   lng = location.coords.longitude;\n//   return lat, lng;\n// });\n// const places = new Places('AIzaSyDvrxdRlryJr6fvx14XdM42TMuvxSEt3hw', '37.253953','127.0750593');\n// console.log(places.random());\n// console.log(axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=37.253953,127.0750593&radius=5000&fields=reviews&keyword=bakery&key=${process.env.REACT_APP_API_KEY}`));\n\nconst places = new Places(process.env.REACT_APP_API_KEY, 0,0);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App places={places}/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\n\nclass Places {\n  constructor(key) {\n    this.key = key;\n    // this.lat = lat;\n    // this.lng = lng;\n    this.getRequestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n  }\n\n  async getStore(lat, lng) {\n    const response = await axios(\n      `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lng}&radius=5000&keyword=bakery&key=${this.key}`,\n      this.getRequestOptions\n    );\n\n    return await response.data;\n  }\n\n  async getDetail(placeId) {\n    const response = await axios(\n      `https://maps.googleapis.com/maps/api/place/details/json?fields=review,business_status,formatted_address,geometry,icon,name,photo,place_id,type,url,rating,formatted_phone_number,opening_hours,website&place_id=${placeId}&key=${this.key}`,\n      this.getRequestOptions\n    );\n\n    return await response.data.result;\n  }\n\n  async getPhotos(photorefenrence) {\n    const response = await axios(\n      `https://maps.googleapis.com/maps/api/place/photo?photoreference=${photorefenrence}&maxwidth=500&key=${this.key}`,\n      this.getRequestOptions\n    );\n    return response.config.url;\n  }\n}\n\nexport default Places;\n"],"sourceRoot":""}